package com.sree.stream;


import java.util.Arrays;
import java.util.List;
import java.util.Map;
import java.util.function.Function;
import java.util.stream.Collectors;
import java.util.stream.Stream;

public class StreamTest {
	
public static void main(String[] args) {
	
	
	List<Employee> employeesList=EmployeeDao.getAll();
	
	List<List<Employee>> nestedEmployeesList=EmployeeDao.getAllNested();
	
	
	

	employeesList.stream().forEach( System.out::println);
	
	//Print the list of employee emails
	employeesList.stream().map(employee->employee.getEmail()).collect(Collectors.toList()).forEach(System.out::println);
	
	
	//flattening the stream 
	employeesList.stream().flatMap(employee->employee.getPhoneNumbers().stream()).collect(Collectors.toList()).forEach(System.out::println);
	
	
	employeesList.stream().filter(emp->emp.getAge()>100).collect(Collectors.toList()).stream().forEach(System.out::println);
	System.out.println("***************************************************");
	String inputStringToCountFrqChar="Srikantask";
	Map<String, Long> outputMap = Arrays.stream(inputStringToCountFrqChar.split("")).collect(Collectors.groupingBy(Function.identity(),Collectors.counting()));
	System.out.println(outputMap);
	
	
	
	System.out.println("***************************************************");
	
	nestedEmployeesList.stream().flatMap(emp->emp.stream().flatMap(e->e.getPhoneNumbers().stream())).forEach(System.out::println);
	
	
	
	System.out.println("*************************Highest Paid employee from each department**************************");
	
	
	Map<String, List<Employee>> deptMap = employeesList.stream().collect(Collectors.groupingBy(Employee::getDepartment));
	
	
}
}
