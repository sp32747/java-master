package com.sree.leet.tree.datastructure;

class Node {
	int item;
	Node left, right;

	public Node(int item) {

		this.item = item;
		left = right = null;
	}

}

class Tree {
	Node root;

	Tree() {
		root = null;
	}

	public void inOrder(Node node) {

		if (node == null) {
			return;
		}

		// traverse the leftchild
		inOrder(node.left);

		// traverse the root node

		System.out.println(node.item +"->");

		//traverse the right node
		inOrder(node.right);

	}

	public void preOrder(Node node) {
		if(node==null) {
			return;
		}
		
		// traverse the root node

				System.out.println(node.item +"->");
				preOrder(node.left);
				preOrder(node.right);
				
		
	}
}

public class InorderTravershal {

	public static void main(String[] args) {

		// create an object of Tree
		Tree tree = new Tree();

		// create nodes of tree
		tree.root = new Node(1);
		tree.root.left = new Node(12);
		tree.root.right = new Node(9);

		// create child nodes of left child
		tree.root.left.left = new Node(5);
		tree.root.left.right = new Node(6);

//		System.out.println("In Order traversal");
//		tree.inOrder(tree.root);


		System.out.println("Pre Order traversal");
		tree.preOrder(tree.root);
		
		
		
	}

}
